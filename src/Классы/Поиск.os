Перем ВидПоиска Экспорт;

Перем Данные;
Перем ПодготовленныеДанные;
Перем Транслит;
Перем КодыАнгл;
Перем КодыРус;
Перем ВсеКоды;

Процедура ПриСозданииОбъекта()
	
	ВидПоиска = 1;//ВидыПоиска.ПоискЗначения;

	ИнициализироватьСправочники();

КонецПроцедуры

Процедура УстановитьДанные(ДанныеДляПоиска) Экспорт
	Данные = ДанныеДляПоиска;
	ПодготовитьДанные();
КонецПроцедуры

Процедура ПодготовитьДанные()
	ПодготовленныеДанные = Новый СписокЗначений();
	Для каждого Фраза Из Данные Цикл
		Набор = Новый ЯзыковойНабор();
		Набор.Русский.ОригинальныйТекст = Фраза;
		Если СтрДлина(Фраза) > 0 Тогда
			Для Каждого ТекстСлова из СтрРазделить(Фраза, " ") Цикл
				Слово = Новый Слово();
				Слово.Текст = НРег(ТекстСлова);
				Слово.СписокКодов = ПолучитьКоды(ТекстСлова, ВсеКоды);
				Набор.Русский.Слова.Добавить(Слово);
			КонецЦикла;
		КонецЕсли;
		ПодготовленныеДанные.Добавить(Набор);
	КонецЦикла;
КонецПроцедуры

Функция ВыполнитьПоиск(СтрокаПоиска) Экспорт
	Анализ = Новый ОбъектАнализа();	
	Трасляция = Новый ОбъектАнализа();
	Если СтрДлина(СтрокаПоиска) > 0 Тогда
		Для Каждого ТекстСлова из СтрРазделить(СтрокаПоиска, " ") Цикл
			Слово = Новый Слово();
			Слово.Текст = НРег(ТекстСлова);
			Слово.СписокКодов = ПолучитьКоды(ТекстСлова, ВсеКоды);
			Анализ.Слова.Добавить(Слово);

			ТранслитСлово = Новый Слово();
			ТранслитСлово.Текст = Транслитировать(НРег(ТекстСлова), Транслит);
			ТранслитСлово.СписокКодов = ПолучитьКоды(ТранслитСлово.Текст, ВсеКоды);
			Трасляция.Слова.Добавить(ТранслитСлово);
		КонецЦикла;
	КонецЕсли;

	Результат = Новый Массив;
	Для Каждого Набор из ПодготовленныеДанные Цикл
		ТипЯзыка = 1;
		Вес = ОтранжироватьФразу(Набор.Русский, Анализ, Ложь);

	КонецЦикла
		
КонецФункции

Функция Транслитировать(Знач ТекстТрансляции, Словарь)
	Результат = ТекстТрансляции;
	Для каждого КиЗ Из Словарь Цикл
		Результат = СтрЗаменить(Результат, КиЗ.Ключ, КиЗ.Значение);
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция ПолучитьКоды(СтрокаСлова, ДопустимыеКоды)
	Результат = Новый СписокЗначений();
	Для Сч = 1 по СтрДлина(СтрокаСлова) Цикл
		ТекСимвол = Сред(СтрокаСлова, Сч, 1);
		ИскомыйКод = ДопустимыеКоды.Получить(ТекСимвол);
		Если не ИскомыйКод = Неопределено Тогда
			Результат.Добавить(ИскомыйКод);
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция ОтранжироватьФразу(Источник, Анализ, Трансляция)
	Если Источник.Слова.Количество() = 0 Тогда
		Если Анализ.Слова.Количество() = 0 Тогда
			Возврат 0;
		КонецЕсли;

		Результат = 0;
		Для Каждого Слово из Анализ.Слова Цикл
			Результат = Результат + СтрДлина(Слово.Текст) * 2 * 100;
			Возврат Результат;
		КонецЦикла;
	КонецЕсли;

	Если Анализ.Слова.Количество() = 0 Тогда
		Результат = 0;
		Для Каждого Слово из Источник.Слова Цикл
			Результат = Результат + СтрДлина(Слово.Текст) * 2 * 100;
			Возврат Результат;
		КонецЦикла;
	КонецЕсли;

	Результат = 0;

	Для СчАнализ = 0 по Анализ.Слова.Количество() - 1 Цикл
		МинВесСлова = 999999999999;
		МинИндекс = 0;

		Для СчИсточник = 0 по Источник.Слова.Количество() - 1 Цикл
			ТекВесСлова = ОтранжироватьСлово(Источник.Слова[СчИсточник], Анализ.Слова[СчАнализ], Трансляция);

			Если ТекВесСлова < МинВесСлова Тогда
				МинВесСлова = ТекВесСлова;
				МинИндекс = СчИсточник;
			КонецЕсли;

		КонецЦикла;
		Результат = Результат + МинВесСлова * 100 + ( абс(СчАнализ - МинИндекс) / 10.0);
	КонецЦикла;

	Возврат Результат;

КонецФункции

Функция абс(Число)

	Возврат ?(Число < 0 , Число * -1, Число);
	
КонецФункции

Функция ОтранжироватьСлово(СловоИсточник, СловоПоиск, Трансляция)
	МинРастояние = 999999999999;
	ОбрезанноеСлово = Новый Слово();
	Длина = МИН(СтрДлина(СловоИсточник.Текст), СтрДлина(СловоПоиск.Текст) + 1);
	
	Для Сч = 0 по СтрДлина(СловоИсточник.Текст) - Длина Цикл
		ОбрезанноеСлово.Текст = Сред(СловоИсточник.Текст, Сч, Длина);
		ОбрезанноеСлово.СписокКодов = ПолучитьКоды(ОбрезанноеСлово.Текст, ВсеКоды);
		МинРастояние = МИН(МинРастояние,
						   Растояние(ОбрезанноеСлово, СловоПоиск, СтрДлина(СловоИсточник.Текст) = СтрДлина(ОбрезанноеСлово.Текст), Трансляция) + (Сч * 2 / 10.0))
	КонецЦикла;
	Возврат МинРастояние;
КонецФункции

Функция ВесРастоянияСимволов(СловоИсточник, ПозицияВИсточнике, СловоПоиск, ПозицияВПоиске, Транспозиция) Экспорт
	
КонецФункции

Функция Растояние(СловоИсточник, СловоПоиск, СловоЦеликом, Трансляция) Экспорт

	Если ПустаяСтрока(СловоИсточник.Текст) Тогда
		Если ПустаяСтрока(СловоПоиск.Текст) Тогда
			Возврат 0;
		КонецЕсли;
		Возврат СтрДлина(СловоПоиск.Текст) * 2; 
	КонецЕсли;

	Если ПустаяСтрока(СловоПоиск.Текст) Тогда
		Возврат СтрДлина(СловоИсточник.Текст) * 2;
	КонецЕсли;

	ДлинаИсточника = СтрДлина(СловоИсточник.Текст);
	ДлинаПоиска = СтрДлина(СловоПоиск.Текст);

	ТаблицаРасстояний = Новый Матрица(3, ДлинаПоиска+1);

	Для Сч = 1 по ДлинаПоиска Цикл
		ТаблицаРасстояний.Значение(0, Сч, Сч * 2);
	КонецЦикла;
			 ////////////////////////
	ТекущаяСтрока = 0;
	
	Для СчИсточника = 1 по ДлинаИсточника Цикл
		ТекущаяСтрока = ПобитовоеИ(СчИсточника, 1);
		ТаблицаРасстояний.Значение(ТекущаяСтрока, 0, СчИсточника * 2);
		ПредыдущаяСтрока = ПобитовоеИсключительноеИли(ТекущаяСтрока, 1);
		Для СчПриемника = 1 По ДлинаПриемника Цикл
			Вес = ?(СимволСтроки(Приемник , СчПриемника) = СимволСтроки(Источник, СчИсточника), 0, 1);	
			
			РасчетноеРастояние = МИН(
				МИН(
					ТаблицаРасстояний.Значение(ПредыдущаяСтрока, СчПриемника) + 2,
					ТаблицаРасстояний.Значение(ТекущаяСтрока, СчПриемника - 1) + 2
					),			
				ТаблицаРасстояний.Значение(ПредыдущаяСтрока, СчПриемника - 1) + Вес
			);
			ТаблицаРасстояний.Значение(ТекущаяСтрока, СчПриемника, РасчетноеРастояние);
		КонецЦикла;

	КонецЦикла;

	Возврат ТаблицаРасстояний.Значение(ТекущаяСтрока, ДлинаПриемника);
	
КонецФункции

Функция Старое_Растояние(Источник, Приемник) Экспорт

	Если ПустаяСтрока(Источник) Тогда
		Если ПустаяСтрока(Приемник) Тогда
			Возврат 0;
		КонецЕсли;
		Возврат СтрДлина(Приемник); 
	КонецЕсли;

	ДлинаПриемника = СтрДлина(Приемник);
	ДлинаИсточника = СтрДлина(Источник);

	ТаблицаРасстояний = Новый Матрица(2, ДлинаПриемника+1);

	Для Сч = 1 по ДлинаПриемника Цикл
		ТаблицаРасстояний.Значение(0, Сч, Сч * 2);
	КонецЦикла;

	ТекущаяСтрока = 0;
	
	Для СчИсточника = 1 по ДлинаИсточника Цикл
		ТекущаяСтрока = ПобитовоеИ(СчИсточника, 1);
		ТаблицаРасстояний.Значение(ТекущаяСтрока, 0, СчИсточника * 2);
		ПредыдущаяСтрока = ПобитовоеИсключительноеИли(ТекущаяСтрока, 1);
		Для СчПриемника = 1 По ДлинаПриемника Цикл
			Вес = ?(СимволСтроки(Приемник , СчПриемника) = СимволСтроки(Источник, СчИсточника), 0, 1);	
			
			РасчетноеРастояние = МИН(
				МИН(
					ТаблицаРасстояний.Значение(ПредыдущаяСтрока, СчПриемника) + 2,
					ТаблицаРасстояний.Значение(ТекущаяСтрока, СчПриемника - 1) + 2
					),			
				ТаблицаРасстояний.Значение(ПредыдущаяСтрока, СчПриемника - 1) + Вес
			);
			ТаблицаРасстояний.Значение(ТекущаяСтрока, СчПриемника, РасчетноеРастояние);
		КонецЦикла;

	КонецЦикла;

	Возврат ТаблицаРасстояний.Значение(ТекущаяСтрока, ДлинаПриемника);
	
КонецФункции

Функция СимволСтроки(Строка, Номер) Экспорт
	Возврат Сред(Строка, Номер, 1);
КонецФункции

Процедура ИнициализироватьСправочники()
	Транслит = Новый Соответствие();
	Транслит.Вставить( "а", "a"   );
	Транслит.Вставить( "б", "b"   );
	Транслит.Вставить( "в", "v"   );
	Транслит.Вставить( "г", "g"   );
	Транслит.Вставить( "д", "d"   );
	Транслит.Вставить( "е", "e"   );
	Транслит.Вставить( "ё", "yo"  );
	Транслит.Вставить( "ж", "zh"  );
	Транслит.Вставить( "з", "z"   );
	Транслит.Вставить( "и", "i"   );
	Транслит.Вставить( "й", "i"   );
	Транслит.Вставить( "к", "k"   );
	Транслит.Вставить( "л", "l"   );
	Транслит.Вставить( "м", "m"   );
	Транслит.Вставить( "н", "n"   );
	Транслит.Вставить( "о", "o"   );
	Транслит.Вставить( "п", "p"   );
	Транслит.Вставить( "р", "r"   );
	Транслит.Вставить( "с", "s"   );
	Транслит.Вставить( "т", "t"   );
	Транслит.Вставить( "у", "u"   );
	Транслит.Вставить( "ф", "f"   );
	Транслит.Вставить( "х", "x"   );
	Транслит.Вставить( "ц", "c"   );
	Транслит.Вставить( "ч", "ch"  );
	Транслит.Вставить( "ш", "sh"  );
	Транслит.Вставить( "щ", "shh" );
	Транслит.Вставить( "ъ", ""    );
	Транслит.Вставить( "ы", "y"   );
	Транслит.Вставить( "ь", ""    );
	Транслит.Вставить( "э", "e"   );
	Транслит.Вставить( "ю", "yu"  );
	Транслит.Вставить( "я", "ya"  );

	КодыАнгл = Новый Соответствие();
	КодыАнгл.Вставить( "`", 192  );
	КодыАнгл.Вставить( "1", 49   );
	КодыАнгл.Вставить( "2", 50   );
	КодыАнгл.Вставить( "3", 51   );
	КодыАнгл.Вставить( "4", 52   );
	КодыАнгл.Вставить( "5", 53   );
	КодыАнгл.Вставить( "6", 54   );
	КодыАнгл.Вставить( "7", 55   );
	КодыАнгл.Вставить( "8", 56   );
	КодыАнгл.Вставить( "9", 57   );
	КодыАнгл.Вставить( "0", 48   );
	КодыАнгл.Вставить( "-", 189  );
	КодыАнгл.Вставить( "=", 187  );
	КодыАнгл.Вставить( "q", 81   );
	КодыАнгл.Вставить( "w", 87   );
	КодыАнгл.Вставить( "e", 69   );
	КодыАнгл.Вставить( "r", 82   );
	КодыАнгл.Вставить( "t", 84   );
	КодыАнгл.Вставить( "y", 89   );
	КодыАнгл.Вставить( "u", 85   );
	КодыАнгл.Вставить( "i", 73   );
	КодыАнгл.Вставить( "o", 79   );
	КодыАнгл.Вставить( "p", 80   );
	КодыАнгл.Вставить( "[", 219  );
	КодыАнгл.Вставить( "]", 221  );
	КодыАнгл.Вставить( "a", 65   );
	КодыАнгл.Вставить( "s", 83   );
	КодыАнгл.Вставить( "d", 68   );
	КодыАнгл.Вставить( "f", 70   );
	КодыАнгл.Вставить( "g", 71   );
	КодыАнгл.Вставить( "h", 72   );
	КодыАнгл.Вставить( "j", 74   );
	КодыАнгл.Вставить( "k", 75   );
	КодыАнгл.Вставить( "l", 76   );
	КодыАнгл.Вставить( ";", 186  );
	КодыАнгл.Вставить( """", 222 );
	КодыАнгл.Вставить( "z", 90   );
	КодыАнгл.Вставить( "x", 88   );
	КодыАнгл.Вставить( "c", 67   );
	КодыАнгл.Вставить( "v", 86   );
	КодыАнгл.Вставить( "b", 66   );
	КодыАнгл.Вставить( "n", 78   );
	КодыАнгл.Вставить( "m", 77   );
	КодыАнгл.Вставить( ",", 188  );
	КодыАнгл.Вставить( ".", 190  );
	КодыАнгл.Вставить( "/", 191  );
	КодыАнгл.Вставить( "~" , 192 );
	КодыАнгл.Вставить( "!" , 49  );
	КодыАнгл.Вставить( "@" , 50  );
	КодыАнгл.Вставить( "#" , 51  );
	КодыАнгл.Вставить( "$" , 52  );
	КодыАнгл.Вставить( "%" , 53  );
	КодыАнгл.Вставить( "^" , 54  );
	КодыАнгл.Вставить( "&" , 55  );
	КодыАнгл.Вставить( "*" , 56  );
	КодыАнгл.Вставить( "(" , 57  );
	КодыАнгл.Вставить( ")" , 48  );
	КодыАнгл.Вставить( "_" , 189 );
	КодыАнгл.Вставить( "+" , 187 );
	КодыАнгл.Вставить( "(", 219  );
	КодыАнгл.Вставить( ")", 221  );
	КодыАнгл.Вставить( ":", 186  );
	КодыАнгл.Вставить( "<", 188  );
	КодыАнгл.Вставить( ">", 190  );
	КодыАнгл.Вставить( "?", 191  );

	КодыРус = Новый Соответствие();
	КодыРус.Вставить( "ё" , 192 );
	КодыРус.Вставить( "1" , 49  );
	КодыРус.Вставить( "2" , 50  );
	КодыРус.Вставить( "3" , 51  );
	КодыРус.Вставить( "4" , 52  );
	КодыРус.Вставить( "5" , 53  );
	КодыРус.Вставить( "6" , 54  );
	КодыРус.Вставить( "7" , 55  );
	КодыРус.Вставить( "8" , 56  );
	КодыРус.Вставить( "9" , 57  );
	КодыРус.Вставить( "0" , 48  );
	КодыРус.Вставить( "-" , 189 );
	КодыРус.Вставить( "=" , 187 );
	КодыРус.Вставить( "й" , 81  );
	КодыРус.Вставить( "ц" , 87  );
	КодыРус.Вставить( "у" , 69  );
	КодыРус.Вставить( "к" , 82  );
	КодыРус.Вставить( "е" , 84  );
	КодыРус.Вставить( "н" , 89  );
	КодыРус.Вставить( "г" , 85  );
	КодыРус.Вставить( "ш" , 73  );
	КодыРус.Вставить( "щ" , 79  );
	КодыРус.Вставить( "з" , 80  );
	КодыРус.Вставить( "х" , 219 );
	КодыРус.Вставить( "ъ" , 221 );
	КодыРус.Вставить( "ф" , 65  );
	КодыРус.Вставить( "ы" , 83  );
	КодыРус.Вставить( "в" , 68  );
	КодыРус.Вставить( "а" , 70  );
	КодыРус.Вставить( "п" , 71  );
	КодыРус.Вставить( "р" , 72  );
	КодыРус.Вставить( "о" , 74  );
	КодыРус.Вставить( "л" , 75  );
	КодыРус.Вставить( "д" , 76  );
	КодыРус.Вставить( "ж" , 186 );
	КодыРус.Вставить( "э" , 222 );
	КодыРус.Вставить( "я" , 90  );
	КодыРус.Вставить( "ч" , 88  );
	КодыРус.Вставить( "с" , 67  );
	КодыРус.Вставить( "м" , 86  );
	КодыРус.Вставить( "и" , 66  );
	КодыРус.Вставить( "т" , 78  );
	КодыРус.Вставить( "ь" , 77  );
	КодыРус.Вставить( "б" , 188 );
	КодыРус.Вставить( "ю" , 190 );
	КодыРус.Вставить( "." , 191 );
	КодыРус.Вставить( "!" , 49  );
	КодыРус.Вставить( """" , 50 );
	КодыРус.Вставить( "№" , 51  );
	КодыРус.Вставить( ";" , 52  );
	КодыРус.Вставить( "%" , 53  );
	КодыРус.Вставить( ":" , 54  );
	КодыРус.Вставить( "?" , 55  );
	КодыРус.Вставить( "*" , 56  );
	КодыРус.Вставить( "(" , 57  );
	КодыРус.Вставить( ")" , 48  );
	КодыРус.Вставить( "_" , 189 );
	КодыРус.Вставить( "+" , 187 );
	КодыРус.Вставить( "," , 191 );

	ВсеКоды = Новый Соответствие();
	Для Каждого КиЗ из КодыАнгл Цикл
		ВсеКоды.Вставить(КиЗ.Ключ, КиЗ.Значение);
	КонецЦикла;
	Для Каждого КиЗ из КодыРус Цикл
		ВсеКоды.Вставить(КиЗ.Ключ, КиЗ.Значение);
	КонецЦикла;
КонецПроцедуры