Перем ЛедирующийРазрыв;
Перем КонечныйРазрыв;
Перем ВнутреннийРазрыв;
Перем СовпадениеПоследовательное;
Перем СовпадениеСлеш;
Перем СовпадениеСлово;
Перем СовпадениеЗаглавное;
Перем СовпадениеТочка;
Перем ЗначениеМаксимума;
Перем ЗначениеМинимума;
Перем МаксимальнаяДлинаПоиска;

Процедура ПриСозданииОбъекта()

	ЛедирующийРазрыв = -0.005;
	КонечныйРазрыв = -0.005;
	ВнутреннийРазрыв = -0.01;
	СовпадениеПоследовательное = 1.0;
	СовпадениеСлеш = 0.9;
	СовпадениеСлово = 0.8;
	СовпадениеЗаглавное = 0.7;
	СовпадениеТочка = 0.6;
	ЗначениеМаксимума = 999999999999999;
	ЗначениеМинимума = -999999999999999;
	МаксимальнаяДлинаПоиска = 1024

КонецПроцедуры

Функция СимволСтроки(Строка, Номер) Экспорт
	Возврат Сред(Строка, Номер, 1);
КонецФункции

Функция ЕстьСовпадения(Иголка, Стог, УчитыватьРегистр = Ложь) Экспорт
	Если НЕ УчитыватьРегистр Тогда
	  Иголка = НРег(Иголка);
	  Стог = НРег(Стог);
	КонецЕсли;
  
	Счетчик = 1;
	Для Счетчик = 1 По СтрДлина(Иголка) Цикл
	  Счетчик = СтрНайти(Стог, СимволСтроки(Иголка, Счетчик));
	  Если Счетчик = 0 Тогда
		Возврат Ложь;
	  Иначе
		Счетчик = Счетчик + 1;
	  КонецЕсли;
	КонецЦикла;
  
	Возврат Истина;
КонецФункции

Функция ЭтоБуква(СимволБуквы) 
	НаборБукв = "йцукенгшщзхъфывапролджэячсмитьбюqwertyuiopasdfghjklzxcvbnm";
	Возврат СтрНайти(НаборБукв, НРег(СимволБуквы)) > 0;
КонецФункции

Функция ВНижнемРегистре(ПроверяемыйСимвол) Экспорт
	Возврат ?(ЭтоБуква(ПроверяемыйСимвол), ПроверяемыйСимвол = НРег(ПроверяемыйСимвол), Ложь);
КонецФункции

Функция ВВерхнемРегистре(ПроверяемыйСимвол) Экспорт
	Возврат ?(ЭтоБуква(ПроверяемыйСимвол), ПроверяемыйСимвол = ВРег(ПроверяемыйСимвол), Ложь);
КонецФункции

Функция РасчитатьБонус(Стог) Экспорт
  БонусыСовпадения = Новый Соответствие();

  ПредыдущийСимвол = "/";
  Для Счетчик = 1 по СтрДлина(Стог) Цикл
    ТекущийСимвол = СимволСтроки(Стог,Счетчик);
    Если ПредыдущийСимвол = "/" или ПредыдущийСимвол = "\\" Тогда
      БонусыСовпадения.Вставить(Счетчик, СовпадениеСлеш);
	ИначеЕсли ПредыдущийСимвол = "-" ИЛИ ПредыдущийСимвол = "_" ИЛИ ПредыдущийСимвол = " " Тогда
		БонусыСовпадения.Вставить(Счетчик, СовпадениеСлово);
    ИначеЕсли ПредыдущийСимвол = "." Тогда
		БонусыСовпадения.Вставить(Счетчик, СовпадениеТочка);
    ИначеЕсли ВНижнемРегистре(ПредыдущийСимвол) и ВВерхнемРегистре(ТекущийСимвол) Тогда
		БонусыСовпадения.Вставить(Счетчик, СовпадениеЗаглавное);
	иначе
		БонусыСовпадения.Вставить(Счетчик, 0);
    КонецЕсли;

    ПредыдущийСимвол = ТекущийСимвол
  КонецЦикла;

  Возврат БонусыСовпадения;
КонецФункции

Функция Расчитать(Иголка, Стог, МатрицаД, МатрицаМ, УчитыватьРегистр = Ложь) Экспорт
	БонусыСовпадения = РасчитатьБонус(Стог);
	ДлинаИголки = СтрДлина(Иголка);
	ДлинаСтога = СтрДлина(Стог);
  
	Если не УчитыватьРегистр Тогда
	  Иголка = НРег(Иголка);
	  Стог = НРег(Стог);
	КонецЕсли;
  
	СимволыСтога = Новый Соответствие();
	Для Счетчик = 1 по ДлинаСтога Цикл
	  СимволыСтога.Вставить(Счетчик, СимволСтроки(Стог, Счетчик));
	КонецЦикла;
  
	Для Счетчик = 1 по ДлинаИголки Цикл
	  МатрицаДСчетчик = Новый Соответствие();
	  МатрицаД.Вставить(Счетчик, МатрицаДСчетчик);
	  МатрицаМСчетчик = Новый Соответствие();
	  МатрицаМ.Вставить(Счетчик, МатрицаМСчетчик);
	  
	  ПредыдущийРезультат = ЗначениеМинимума;

	  Разрыв = ?(Счетчик = ДлинаИголки, КонечныйРазрыв, ВнутреннийРазрыв);
	  СимволИголки = СимволСтроки(Иголка, Счетчик);
  
	  Для СчетчикСтога = 1 по ДлинаСтога Цикл
		Если СимволИголки = СимволыСтога[СчетчикСтога] Тогда
		  Результат = ЗначениеМинимума;
		  Если Счетчик = 1 Тогда
			Результат = ((СчетчикСтога - 1) * ЛедирующийРазрыв) + БонусыСовпадения[СчетчикСтога];
		  ИначеЕсли СчетчикСтога > 1 Тогда
			Рез1 = МатрицаМ[Счетчик - 1][СчетчикСтога - 1] + БонусыСовпадения[СчетчикСтога];
			Рез2 = МатрицаД[Счетчик - 1][СчетчикСтога - 1] + СовпадениеПоследовательное;
			Результат = МАКС(Рез1, Рез2);
		  КонецЕсли;
		  МатрицаДСчетчик.Вставить(СчетчикСтога, Результат);
		  ПредыдущийРезультат = МАКС(Результат, ПредыдущийРезультат + Разрыв);
		  МатрицаМСчетчик.Вставить(СчетчикСтога, ПредыдущийРезультат);
		Иначе
		  МатрицаДСчетчик.Вставить(СчетчикСтога, ЗначениеМинимума);
		  ПредыдущийРезультат = ПредыдущийРезультат + Разрыв;
		  МатрицаМСчетчик.Вставить(СчетчикСтога, ПредыдущийРезультат);
		КонецЕсли;
	  КонецЦикла;
	КонецЦикла;
КонецФункции

Функция РасчитатьИдентичность(Иголка, Стог, УчитыватьРегистр = Ложь) Экспорт
	ДлинаИголки = СтрДлина(Иголка);
	ДлинаСтога = СтрДлина(Стог);
  
	Если ДлинаИголки = 0 ИЛИ ДлинаСтога = 0 ИЛИ ДлинаСтога > МаксимальнаяДлинаПоиска ИЛИ ДлинаИголки > ДлинаСтога Тогда
	  Возврат ЗначениеМинимума;
	ИначеЕсли ДлинаИголки = ДлинаСтога 
		И ((УчитыватьРегистр = Истина и Иголка = Стог) ИЛИ
			(УчитыватьРегистр = Ложь и НРег(Иголка) = НРег(Стог)))
		Тогда
	  Возврат ЗначениеМаксимума;
	Иначе
	  МатрицаД = Новый Соответствие();
	  МатрицаМ = Новый Соответствие();
	  Расчитать(Иголка, Стог, МатрицаД, МатрицаМ, УчитыватьРегистр);
	  Возврат МатрицаМ[ДлинаИголки][ДлинаСтога];
	КонецЕсли;
КонецФункции

Функция РасчитатьИдентичностьСПозициями(Иголка, Стог, УчитыватьРегистр = Ложь) Экспорт
	ДлинаИголки = СтрДлина(Иголка);
	ДлинаСтога = СтрДлина(Стог);
  
	Если ДлинаИголки = 0 ИЛИ ДлинаСтога = 0 ИЛИ ДлинаСтога > МаксимальнаяДлинаПоиска ИЛИ ДлинаИголки > ДлинаСтога Тогда
	  Возврат Новый Структура("Совпадения, Идентичность", Новый Соответствие(), ЗначениеМинимума);
	ИначеЕсли ДлинаИголки = ДлинаСтога Тогда
	  Совпадения = Новый Соответствие();
	  Для Счетчик = 1 По ДлинаИголки Цикл
		Совпадения.Вставить(Счетчик, Счетчик);
	  КонецЦикла;
	  Возврат Новый Структура("Совпадения, Идентичность", Совпадения, ЗначениеМаксимума);
	КонецЕсли;
  
	МатрицаД = Новый Соответствие();
	МатрицаМ = Новый Соответствие();
	Расчитать(Иголка, Стог, МатрицаД, МатрицаМ, УчитыватьРегистр);
  
	Позиции = Новый Соответствие();
	ЕстьСовпадение = Ложь;
	СчетчикСтога = ДлинаСтога;
	Для ОбратныйСчетчик = 1 По ДлинаИголки Цикл
		Счетчик = ДлинаИголки - (ОбратныйСчетчик-1);
	  Пока СчетчикСтога >= 1 Цикл
		Если МатрицаД[Счетчик][СчетчикСтога] <> ЗначениеМинимума И (ЕстьСовпадение ИЛИ МатрицаД[Счетчик][СчетчикСтога] = МатрицаМ[Счетчик][СчетчикСтога]) Тогда
		  ЕстьСовпадение = (Счетчик <> 1) И (СчетчикСтога <> 1) И (
		  МатрицаМ[Счетчик][СчетчикСтога] = МатрицаД[Счетчик - 1][СчетчикСтога - 1] + СовпадениеПоследовательное);
		  Позиции.Вставить(Счетчик, СчетчикСтога);
		  СчетчикСтога = СчетчикСтога - 1;
		  Прервать;
		Иначе
		  СчетчикСтога = СчетчикСтога - 1;
		КонецЕсли;
	  КонецЦикла;
	КонецЦикла;
  
	Возврат Новый Структура("Совпадения, Идентичность", Позиции, МатрицаМ[ДлинаИголки][ДлинаСтога]);
КонецФункции